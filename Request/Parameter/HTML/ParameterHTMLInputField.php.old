<?php
/**
 * Created by PhpStorm.
 * User: ari
 * Date: 11/13/14
 * Time: 6:02 PM
 */
namespace CPath\Request\Parameter\HTML;

use CPath\Render\HTML\Attribute\IAttributes;
use CPath\Render\HTML\Element\HTMLInputField;
use CPath\Render\HTML\Element\IHTMLInput;
use CPath\Render\HTML\IRenderHTML;
use CPath\Request\IRequest;
use CPath\Request\Parameter\IRequestParameter;
use CPath\Request\Validation\IValidation;

class ParameterHTMLInputField
{
	const CSS_CLASS_ERROR = 'error';

	private $mParameter;
	private $mInput;

	public function __construct(IRequestParameter $Parameter, IHTMLInput $Input=null) {
		$this->mParameter = $Parameter;
		$this->mInput = $Input;
	}

	public function getParameter() {
		return $this->mParameter;
	}

	/**
	 * Render request as html
	 * @param IRequest $Request the IRequest inst for this render which contains the request and remaining args
	 * @param IAttributes $Attr optional attributes for the input field
	 * @param IRenderHTML $Parent
	 * @return String|void always returns void
	 */
	function renderHTML(IRequest $Request, IAttributes $Attr = null, IRenderHTML $Parent = null) {
		$Input = $this->mInput ?: new HTMLInputField();
		$Parameter = $this->mParameter;
		$Input->setFieldName($Parameter->getFieldName());

		try {
			$value = $Parameter->getRequestValue($Request);
			if($Parameter instanceof IValidation)
				$value = $Parameter->validate($Request, $value);
			$Input->setInputValue($value);

		} catch (\Exception $ex) {
			$Input->addClass(self::CSS_CLASS_ERROR);
		}

		$Input->renderHTML($Request, $Attr, $Parent);
	}
}